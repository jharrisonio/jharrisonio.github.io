"use strict";(self.webpackChunklearnings=self.webpackChunklearnings||[]).push([[5427],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),g=c(n),d=o,f=g["".concat(l,".").concat(d)]||g[d]||u[d]||i;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=g;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3149:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:6},s="Typescript Debugging with VSCode",a={unversionedId:"js-ts/ts-debugging",id:"js-ts/ts-debugging",title:"Typescript Debugging with VSCode",description:"Use the following VSCode launch config to allow debugging of Typescript files directly without needing to compile.",source:"@site/solutions/js-ts/ts-debugging.md",sourceDirName:"js-ts",slug:"/js-ts/ts-debugging",permalink:"/solutions/js-ts/ts-debugging",draft:!1,editUrl:"https://github.com/jharrisonio/jharrisonio.github.io/tree/master/solutions/js-ts/ts-debugging.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Typescript Compiler",permalink:"/solutions/js-ts/ts-compiler"},next:{title:"NX Basics",permalink:"/solutions/nx/nx-basics"}},l={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"typescript-debugging-with-vscode"},"Typescript Debugging with VSCode"),(0,o.kt)("p",null,"Use the following VSCode launch config to allow debugging of Typescript files directly without needing to compile."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title=".vscode/launch.json"',title:'".vscode/launch.json"'},'    {\n        // Use IntelliSense to learn about possible attributes.\n        // Hover to view descriptions of existing attributes.\n        // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n        "version": "0.2.0",\n        "configurations": [\n            {\n                "name": "Typescript App",\n                "type": "node",\n                "request": "launch",\n                "runtimeExecutable": "node",\n                "runtimeArgs": ["--nolazy", "-r", "ts-node/register/transpile-only"],\n                "args": ["src/app.ts"],\n                "cwd": "${workspaceRoot}",\n                "internalConsoleOptions": "openOnSessionStart",\n                "skipFiles": [\n                    "<node_internals>/**"\n                ]\n            }\n        ]\n    }\n')))}u.isMDXComponent=!0}}]);