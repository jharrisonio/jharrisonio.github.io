"use strict";(self.webpackChunklearnings=self.webpackChunklearnings||[]).push([[410],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7625:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return c},default:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],p={sidebar_position:1},l="NX Basics",s={unversionedId:"nx/nx-basics",id:"nx/nx-basics",title:"NX Basics",description:"This page documents how to use the NX CLI tool for generating workspaces, apps and plugins.",source:"@site/docs/nx/nx-basics.md",sourceDirName:"nx",slug:"/nx/nx-basics",permalink:"/docs/nx/nx-basics",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/nx/nx-basics.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Typescript Compiler Recipes",permalink:"/docs/vscode/vscode-extensions"},next:{title:"NX Plugin Development",permalink:"/docs/nx/nx-plugin-development"}},c=[{value:"Getting Started",id:"getting-started",children:[{value:"Prerequisites",id:"prerequisites",children:[],level:3},{value:"Generate the workspace",id:"generate-the-workspace",children:[],level:3},{value:"Adding an app to the workspace",id:"adding-an-app-to-the-workspace",children:[],level:3},{value:"Building an app",id:"building-an-app",children:[],level:3}],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"nx-basics"},"NX Basics"),(0,i.kt)("p",null,'This page documents how to use the NX CLI tool for generating workspaces, apps and plugins.\nA sample project will be created called "Vast".'),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://nx.dev/"},"NX CLI"))),(0,i.kt)("h3",{id:"generate-the-workspace"},"Generate the workspace"),(0,i.kt)("p",null,"Call the create-nx-workspace CLI tool, give it a name and cd into the folder.\n",(0,i.kt)("inlineCode",{parentName:"p"},"$ npx create-nx-workspace@latest vast && cd vast"),"  "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"What to create in the new workspace = ts"),(0,i.kt)("li",{parentName:"ol"},"Set up distributed caching using Nx Cloud = No")),(0,i.kt)("h3",{id:"adding-an-app-to-the-workspace"},"Adding an app to the workspace"),(0,i.kt)("p",null,"NX plugins are installed via NPM. A list of community plugins can be found ",(0,i.kt)("a",{parentName:"p",href:"https://nx.dev/community#create-nx-plugin"},"here"),".",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"$ npm i @nrwl/node")),(0,i.kt)("p",null,"Once installed, plugins can be called via the nx CLI tool.",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"$ nx generate @nrwl/node:app my-app")),(0,i.kt)("h3",{id:"building-an-app"},"Building an app"),(0,i.kt)("p",null,"Apps can be built by running this command from the monorepo root:",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"$ nx build myapp")),(0,i.kt)("p",null,"All built files are put into the ",(0,i.kt)("inlineCode",{parentName:"p"},"dist")," folder in the root of the monorepo."))}d.isMDXComponent=!0}}]);