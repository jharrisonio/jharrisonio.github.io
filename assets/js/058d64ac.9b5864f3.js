"use strict";(self.webpackChunklearnings=self.webpackChunklearnings||[]).push([[362],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8547:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={},l="Abstract Syntax Trees - AST",c={unversionedId:"programming/abstract-syntax-trees",id:"programming/abstract-syntax-trees",title:"Abstract Syntax Trees - AST",description:"Overview",source:"@site/docs/programming/abstract-syntax-trees.md",sourceDirName:"programming",slug:"/programming/abstract-syntax-trees",permalink:"/docs/programming/abstract-syntax-trees",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/programming/abstract-syntax-trees.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Documentation Home",permalink:"/docs/intro"},next:{title:"Basic NodeJS Project",permalink:"/docs/programming/basic-nodejs-cli"}},p=[{value:"Overview",id:"overview",children:[],level:2},{value:"Why are ASTs useful?",id:"why-are-asts-useful",children:[],level:2},{value:"AST Phases",id:"ast-phases",children:[],level:2},{value:"Tools for working with ASTs",id:"tools-for-working-with-asts",children:[{value:"Typescript",id:"typescript",children:[],level:3},{value:"Recast",id:"recast",children:[],level:3}],level:2},{value:"Resources",id:"resources",children:[],level:2}],u={toc:p};function m(e){var t=e.components,s=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"abstract-syntax-trees---ast"},"Abstract Syntax Trees - AST"),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"When programming languages need to be compiled down to a lower level, they go through a process that converts the raw text into a tree that describes the flow of logic through the file. The diagram below is an example of how a simple expression, ",(0,o.kt)("inlineCode",{parentName:"p"},"let a = b"),", is converted into an AST."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Code to AST diagram",src:r(9737).Z,width:"1620",height:"794"})),(0,o.kt)("h2",{id:"why-are-asts-useful"},"Why are ASTs useful?"),(0,o.kt)("p",null,"Many common tools rely on ASTs to do their magic. Below are a few examples:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Babel -> takes code and transforms it to support older versions"),(0,o.kt)("li",{parentName:"ul"},"ESLint -> analyses files to validate best practices, errors & incorrect syntax"),(0,o.kt)("li",{parentName:"ul"},"jscodeshift -> refactors code en bulk")),(0,o.kt)("p",null,"With a fundamental knowledge of ASTs, developers can better work with these tools and understand their how to configure them properly."),(0,o.kt)("h2",{id:"ast-phases"},"AST Phases"),(0,o.kt)("p",null,"When working with ASTs there are 4 phases split into 2 categories; reading & writing (input and output)."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Reading",(0,o.kt)("br",{parentName:"li"}),"a. ",(0,o.kt)("strong",{parentName:"li"},"Parse:")," Read the source code and convert it to an AST",(0,o.kt)("br",{parentName:"li"}),"b. ",(0,o.kt)("strong",{parentName:"li"},"Traverse:")," Process the AST nodes  "),(0,o.kt)("li",{parentName:"ol"},"Writing",(0,o.kt)("br",{parentName:"li"}),"a. ",(0,o.kt)("strong",{parentName:"li"},"Manipulate:")," Alter the AST accordingly",(0,o.kt)("br",{parentName:"li"}),"b. ",(0,o.kt)("strong",{parentName:"li"},"Generate:")," Convert the AST to newly formatted code  ")),(0,o.kt)("h2",{id:"tools-for-working-with-asts"},"Tools for working with ASTs"),(0,o.kt)("h3",{id:"typescript"},"Typescript"),(0,o.kt)("p",null,"The typescript ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/microsoft/TypeScript/tree/main/src/compiler"},"Github repo")," actually has a folder called 'compiler' which is largely undocumented but provides APIs to work with TS ASTs."),(0,o.kt)("h3",{id:"recast"},"Recast"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/benjamn/recast"},"Recast")," is an NPM library for working with Javascript & Typescript. It supports parsing (reading) and printing (writing)."),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Video: ",(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=C06MohLG_3s"},"Mastering the art of AST")),(0,o.kt)("li",{parentName:"ul"},"Online Tool: ",(0,o.kt)("a",{parentName:"li",href:"https://www.101computing.net/abstract-syntax-tree-generator/"},"Abstract Syntax Tree Generator")),(0,o.kt)("li",{parentName:"ul"},"Online Tool: ",(0,o.kt)("a",{parentName:"li",href:"https://ts-ast-viewer.com/#code/DYUwLgBAhhC8ECMDcQ"},"Typescript AST Viewer"))))}m.isMDXComponent=!0},9737:function(e,t,r){t.Z=r.p+"assets/images/code-ast-28cd78a374e08c346582f53bfd8946a8.png"}}]);